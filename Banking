//SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;
contract Banking{
    mapping(address => uint256) balances;
    address payable owner;

    constructor() {
        owner = payable(msg.sender);
    }

    event deposit(address person, uint256 amount);

    function depositAmount(uint256 amount) public payable{
        require(amount > 0, "Insufficient funds");
        balances[msg.sender] += amount;
        emit deposit(msg.sender, amount);
    }

    function withDrawAmount(uint256 amount) public {
        require(msg.sender == owner, "Invalid user");
        require(balances[msg.sender] > 0, "Insufficient funds");
        require(amount <= balances[msg.sender], "Insufficient funds");
        balances[msg.sender] -= amount;
        payable(msg.sender).transfer(amount);
    }

}